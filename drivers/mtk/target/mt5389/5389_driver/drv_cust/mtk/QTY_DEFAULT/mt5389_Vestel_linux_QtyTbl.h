/*----------------------------------------------------------------------------*
 * Copyright Statement:                                                       *
 *                                                                            *
 *   This software/firmware and related documentation ("MediaTek Software")   *
 * are protected under international and related jurisdictions'copyright laws *
 * as unpublished works. The information contained herein is confidential and *
 * proprietary to MediaTek Inc. Without the prior written permission of       *
 * MediaTek Inc., any reproduction, modification, use or disclosure of        *
 * MediaTek Software, and information contained herein, in whole or in part,  *
 * shall be strictly prohibited.                                              *
 * MediaTek Inc. Copyright (C) 2010. All rights reserved.                     *
 *                                                                            *
 *   BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND     *
 * AGREES TO THE FOLLOWING:                                                   *
 *                                                                            *
 *   1)Any and all intellectual property rights (including without            *
 * limitation, patent, copyright, and trade secrets) in and to this           *
 * Software/firmware and related documentation ("MediaTek Software") shall    *
 * remain the exclusive property of MediaTek Inc. Any and all intellectual    *
 * property rights (including without limitation, patent, copyright, and      *
 * trade secrets) in and to any modifications and derivatives to MediaTek     *
 * Software, whoever made, shall also remain the exclusive property of        *
 * MediaTek Inc.  Nothing herein shall be construed as any transfer of any    *
 * title to any intellectual property right in MediaTek Software to Receiver. *
 *                                                                            *
 *   2)This MediaTek Software Receiver received from MediaTek Inc. and/or its *
 * representatives is provided to Receiver on an "AS IS" basis only.          *
 * MediaTek Inc. expressly disclaims all warranties, expressed or implied,    *
 * including but not limited to any implied warranties of merchantability,    *
 * non-infringement and fitness for a particular purpose and any warranties   *
 * arising out of course of performance, course of dealing or usage of trade. *
 * MediaTek Inc. does not provide any warranty whatsoever with respect to the *
 * software of any third party which may be used by, incorporated in, or      *
 * supplied with the MediaTek Software, and Receiver agrees to look only to   *
 * such third parties for any warranty claim relating thereto.  Receiver      *
 * expressly acknowledges that it is Receiver's sole responsibility to obtain *
 * from any third party all proper licenses contained in or delivered with    *
 * MediaTek Software.  MediaTek is not responsible for any MediaTek Software  *
 * releases made to Receiver's specifications or to conform to a particular   *
 * standard or open forum.                                                    *
 *                                                                            *
 *   3)Receiver further acknowledge that Receiver may, either presently       *
 * and/or in the future, instruct MediaTek Inc. to assist it in the           *
 * development and the implementation, in accordance with Receiver's designs, *
 * of certain softwares relating to Receiver's product(s) (the "Services").   *
 * Except as may be otherwise agreed to in writing, no warranties of any      *
 * kind, whether express or implied, are given by MediaTek Inc. with respect  *
 * to the Services provided, and the Services are provided on an "AS IS"      *
 * basis. Receiver further acknowledges that the Services may contain errors  *
 * that testing is important and it is solely responsible for fully testing   *
 * the Services and/or derivatives thereof before they are used, sublicensed  *
 * or distributed. Should there be any third party action brought against     *
 * MediaTek Inc. arising out of or relating to the Services, Receiver agree   *
 * to fully indemnify and hold MediaTek Inc. harmless.  If the parties        *
 * mutually agree to enter into or continue a business relationship or other  *
 * arrangement, the terms and conditions set forth herein shall remain        *
 * effective and, unless explicitly stated otherwise, shall prevail in the    *
 * event of a conflict in the terms in any agreements entered into between    *
 * the parties.                                                               *
 *                                                                            *
 *   4)Receiver's sole and exclusive remedy and MediaTek Inc.'s entire and    *
 * cumulative liability with respect to MediaTek Software released hereunder  *
 * will be, at MediaTek Inc.'s sole discretion, to replace or revise the      *
 * MediaTek Software at issue.                                                *
 *                                                                            *
 *   5)The transaction contemplated hereunder shall be construed in           *
 * accordance with the laws of Singapore, excluding its conflict of laws      *
 * principles.  Any disputes, controversies or claims arising thereof and     *
 * related thereto shall be settled via arbitration in Singapore, under the   *
 * then current rules of the International Chamber of Commerce (ICC).  The    *
 * arbitration shall be conducted in English. The awards of the arbitration   *
 * shall be final and binding upon both parties and shall be entered and      *
 * enforceable in any court of competent jurisdiction.                        *
 *---------------------------------------------------------------------------*/
/*-----------------------------------------------------------------------------
 *
 * $Author: pingan.du $
 * $Date: 2012/06/04 $
 * $RCSfile: mtk_QtyTbl.h,v $
 * $Revision: #1 $
 *
 *---------------------------------------------------------------------------*/

#ifndef _QTY_TBL_H_
#define _QTY_TBL_H_

#include "general.h"
#include "typedef.h"

////////////////////////////////////////////////////////////////////////////////

UINT16 const CODE DEMO_MODE_BEFORE_SCALER_ARG[][DEMO_MODE_BEFORE_SCALER_END] =
{
//   TDC    HS1    NR    DI   MJC
    {385,   358,  367,  366,  340},     // 480
    {378,   358,  367,  366,    0},     // 576
    {  0,   634,  648,    0,  702},     // 720
    {  0,   714,  726,  974,    0}      // 1080
};

UINT16 const CODE DEMO_MODE_AFTER_SCALER_ARG[][DEMO_MODE_AFTER_SCALER_END] =
{
//  VS   MLC
    {678,  678},  // 768
    {964,  964}  // 1080
};

////////////////////////////////////////////////////////////////////////////////
tagDFT_QTY aDefaultQtyTbl[QUALITY_MAX] =
{
    // GENERAL
    {0x20, 0x90, 0x80, FROM_DFT, QUALITY_CONTRAST},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CONTRAST_MSB},
    {0x60, 0xA0, 0x80, FROM_DFT, QUALITY_BRIGHTNESS},
    {0x00, 0xA0, 0x80, FROM_DFT, QUALITY_SATURATION},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_SATURATION_MSB},
    {0x00, 0xFF, 0x80, FROM_DFT, QUALITY_HUE}, 
    {0x80, 0x80, 0x80, FROM_DFT, QUALITY_BACKLIGHT},

    // Quality Table of OSD_MAPPING ---12a pingan
    {0x20, 0xFF, 0x80, FROM_DFT, QUALITY_OSD_MAPPING_CONTRAST},
    {0x20, 0xFF, 0x80, FROM_DFT, QUALITY_OSD_MAPPING_3D_CONTRAST},//3D
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_OSD_MAPPING_CONTRAST_MSB},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_OSD_MAPPING_3D_CONTRAST_MSB},//3D
    {0x00, 0xFF, 0x80, FROM_DFT, QUALITY_OSD_MAPPING_BRIGHTNESS},
    {0x00, 0xFF, 0x80, FROM_DFT, QUALITY_OSD_MAPPING_3D_BRIGHTNESS},//3D
    {0x00, 0xFF, 0x80, FROM_DFT, QUALITY_OSD_MAPPING_SATURATION},
    {0x00, 0xFF, 0x80, FROM_DFT, QUALITY_OSD_MAPPING_3D_SATURATION},//3D
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_OSD_MAPPING_SATURATION_MSB},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_OSD_MAPPING_3D_SATURATION_MSB},//3D
    {0x00, 0xFF, 0x80, FROM_DFT, QUALITY_OSD_MAPPING_HUE}, 
    {0x00, 0xFF, 0x80, FROM_DFT, QUALITY_OSD_MAPPING_3D_HUE}, //3D
    
    // HSHARP
    {0x40, 0x60, 0x40, FROM_DFT, QUALITY_HSHARP_LOW},
    {0x40, 0x60, 0x40, FROM_DFT, QUALITY_HSHARP_LOW_NEG},
    {0x40, 0x55, 0x43, FROM_DFT, QUALITY_HSHARP_MID},
    {0x40, 0x55, 0x43, FROM_DFT, QUALITY_HSHARP_MID_NEG},
    {0x40, 0x55, 0x45, FROM_DFT, QUALITY_HSHARP_HIGH},
    {0x40, 0x55, 0x45, FROM_DFT, QUALITY_HSHARP_HIGH_NEG},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_HSHARP_LOW_CORING},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_HSHARP_MID_CORING},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_HSHARP_HIGH_CORING},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_HSHARP_LOW_LIMIT_POS},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_HSHARP_LOW_LIMIT_NEG},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_HSHARP_MID_LIMIT_POS},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_HSHARP_MID_LIMIT_NEG},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_HSHARP_HIGH_LIMIT_POS},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_HSHARP_HIGH_LIMIT_NEG},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_HSHARP_CLIP_POS_EN},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_HSHARP_CLIP_NEG_EN},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_HSHARP_GB_CLIP_POS_EN_L},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_HSHARP_GB_CLIP_NEG_EN_L},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_HSHARP_GB_CLIP_POS_EN_M},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_HSHARP_GB_CLIP_NEG_EN_M},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_HSHARP_GB_CLIP_POS_EN_H},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_HSHARP_GB_CLIP_NEG_EN_H},
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_HSHARP_CLIP_FRONT_THR_LOW},
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_HSHARP_CLIP_FRONT_THR_HIGH},
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_HSHARP_CLIP_POS},
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_HSHARP_CLIP_NEG},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_HSHARP_SOFT_CLIP_GAIN},
    {0x00, 0x00, 0x40, FROM_DFT, QUALITY_HSHARP_LC_LOW},
    {0x00, 0x00, 0x40, FROM_DFT, QUALITY_HSHARP_LC_LOW_NEG},
    {0x00, 0x00, 0x40, FROM_DFT, QUALITY_HSHARP_LC_MID},
    {0x00, 0x00, 0x40, FROM_DFT, QUALITY_HSHARP_LC_MID_NEG},
    {0x00, 0x00, 0x40, FROM_DFT, QUALITY_HSHARP_LC_HIGH},
    {0x00, 0x00, 0x40, FROM_DFT, QUALITY_HSHARP_LC_HIGH_NEG},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_HSHARP_LC_LOW_CORING},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_HSHARP_LC_MID_CORING},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_HSHARP_LC_HIGH_CORING},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_HSHARP_LC_LOW_LIMIT_POS},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_HSHARP_LC_LOW_LIMIT_NEG},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_HSHARP_LC_MID_LIMIT_POS},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_HSHARP_LC_MID_LIMIT_NEG},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_HSHARP_LC_HIGH_LIMIT_POS},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_HSHARP_LC_HIGH_LIMIT_NEG},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_HSHARP_LC_CLIP_POS_EN},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_HSHARP_LC_CLIP_NEG_EN},
    {0x00, 0x00, 0x03, FROM_DFT, QUALITY_HSHARP_LC_TABLE_SEL},
    {0x00, 0x00, 0x04, FROM_DFT, QUALITY_HSHARP_LC_TABLE_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_HSHARP_LC_TABLE_OFFSET},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_HSHARP_AC_LPF_EN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_HSHARP_AC_LPF_COEF},

    //TDSHARP
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_ZERO_H1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_ZERO_H2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_ZERO_H3},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_ZERO_D1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_ZERO_D2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_ZERO_D3},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_ZERO_V1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_ZERO_V2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_RATIO_H1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_RATIO_H2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_RATIO_H3},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_RATIO_D1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_RATIO_D2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_RATIO_D3},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_RATIO_V1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_RATIO_V2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_THR_H1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_THR_H2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_THR_H3},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_THR_D1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_THR_D2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_THR_D3},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_THR_V1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_COR_THR_V2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_GAIN_H1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_GAIN_H2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_GAIN_H3},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_GAIN_D1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_GAIN_D2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_GAIN_D3},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_GAIN_V1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARP_GAIN_V2},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_LIMIT_H1},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_LIMIT_H2},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_LIMIT_H3},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_LIMIT_D1},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_LIMIT_D2},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_LIMIT_D3},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_LIMIT_V1},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_LIMIT_V2},
    {0x00, 0x00, 0x0F, FROM_DFT, QUALITY_TDSHARP_LIMIT_RATIO_H1},
    {0x00, 0x00, 0x0F, FROM_DFT, QUALITY_TDSHARP_LIMIT_RATIO_H2},
    {0x00, 0x00, 0x0F, FROM_DFT, QUALITY_TDSHARP_LIMIT_RATIO_H3},
    {0x00, 0x00, 0x0F, FROM_DFT, QUALITY_TDSHARP_LIMIT_RATIO_D1},
    {0x00, 0x00, 0x0F, FROM_DFT, QUALITY_TDSHARP_LIMIT_RATIO_D2},
    {0x00, 0x00, 0x0F, FROM_DFT, QUALITY_TDSHARP_LIMIT_RATIO_D3},
    {0x00, 0x00, 0x0F, FROM_DFT, QUALITY_TDSHARP_LIMIT_RATIO_V1},
    {0x00, 0x00, 0x0F, FROM_DFT, QUALITY_TDSHARP_LIMIT_RATIO_V2},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_BOUND_H1},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_BOUND_H2},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_BOUND_H3},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_BOUND_D1},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_BOUND_D2},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_BOUND_D3},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_BOUND_V1},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_BOUND_V2},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_TDSHARP_CLIP_RATIO_H},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_CLIP_POS_H},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_CLIP_NEG_H},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_TDSHARP_CLIP_RATIO_V},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_CLIP_POS_V},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_CLIP_NEG_V},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_TDSHARP_CLIP_RATIO_D},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_CLIP_POS_D},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARP_CLIP_NEG_D},

    // LTI
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_FLT_LTI_H1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_COR_ZERO_LTI_H1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_COR_RATIO_LTI_H1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_COR_THR_LTI_H1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_GAIN_LTI_H1},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_LTI_LIMIT_LTI_H1},
    {0x00, 0x00, 0x0F, FROM_DFT, QUALITY_LTI_LIMIT_RATIO_LTI_H1},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_LTI_BOUND_LTI_H1},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_LTI_CLIP_RATIO_LTI_H1},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_LTI_CLIP_POS_LTI_H1},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_LTI_CLIP_NEG_LTI_H1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_FLT_LTI_H2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_COR_ZERO_LTI_H2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_COR_RATIO_LTI_H2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_COR_THR_LTI_H2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_GAIN_LTI_H2},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_LTI_LIMIT_LTI_H2},
    {0x00, 0x00, 0x0F, FROM_DFT, QUALITY_LTI_LIMIT_RATIO_LTI_H2},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_LTI_BOUND_LTI_H2},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_LTI_CLIP_RATIO_LTI_H2},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_LTI_CLIP_POS_LTI_H2},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_LTI_CLIP_NEG_LTI_H2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_FLT_LTI_V},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_COR_ZERO_LTI_V},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_COR_RATIO_LTI_V},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_COR_THR_LTI_V},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_LTI_GAIN_LTI_V},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_LTI_LIMIT_LTI_V},
    {0x00, 0x00, 0x0F, FROM_DFT, QUALITY_LTI_LIMIT_RATIO_LTI_V},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_LTI_BOUND_LTI_V},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_LTI_CLIP_RATIO_LTI_V},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_LTI_CLIP_POS_LTI_V},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_LTI_CLIP_NEG_LTI_V},

    // PBC
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_PBC_PBC1_EN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_PBC_PBC1_EDGE_EN},
    {0x00, 0x00, 0x0A, FROM_DFT, QUALITY_PBC_PBC1_EDGE_SLOPE},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_PBC_PBC1_LPF_EN},   
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_PBC_PBC1_LPF_LEVEL},    
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_CORING_H1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_CORING_H2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_CORING_H3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_CORING_D1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_CORING_D2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_CORING_D3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_CORING_V1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_CORING_V2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_GAIN_H1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_GAIN_H2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_GAIN_H3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_GAIN_D1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_GAIN_D2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_GAIN_D3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_GAIN_V1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_GAIN_V2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_LIMIT_H1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_LIMIT_H2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_LIMIT_H3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_LIMIT_D1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_LIMIT_D2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_LIMIT_D3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_LIMIT_V1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC1_LIMIT_V2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_PBC_PBC2_EN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_PBC_PBC2_EDGE_EN},
    {0x00, 0x00, 0x0A, FROM_DFT, QUALITY_PBC_PBC2_EDGE_SLOPE},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_PBC_PBC2_LPF_EN},   
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_PBC_PBC2_LPF_LEVEL},    
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_CORING_H1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_CORING_H2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_CORING_H3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_CORING_D1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_CORING_D2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_CORING_D3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_CORING_V1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_CORING_V2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_GAIN_H1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_GAIN_H2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_GAIN_H3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_GAIN_D1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_GAIN_D2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_GAIN_D3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_GAIN_V1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_GAIN_V2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_LIMIT_H1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_LIMIT_H2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_LIMIT_H3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_LIMIT_D1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_LIMIT_D2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_LIMIT_D3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_LIMIT_V1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC2_LIMIT_V2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_PBC_PBC3_EN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_PBC_PBC3_EDGE_EN},
    {0x00, 0x00, 0x0A, FROM_DFT, QUALITY_PBC_PBC3_EDGE_SLOPE},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_PBC_PBC3_LPF_EN},   
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_PBC_PBC3_LPF_LEVEL},    
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_CORING_H1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_CORING_H2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_CORING_H3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_CORING_D1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_CORING_D2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_CORING_D3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_CORING_V1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_CORING_V2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_GAIN_H1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_GAIN_H2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_GAIN_H3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_GAIN_D1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_GAIN_D2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_GAIN_D3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_GAIN_V1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_GAIN_V2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_LIMIT_H1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_LIMIT_H2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_LIMIT_H3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_LIMIT_D1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_LIMIT_D2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_LIMIT_D3},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_LIMIT_V1},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_PBC_PBC3_LIMIT_V2},

    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_OSD_MAPPING_SHARPNESS},//(SHARPNESS global gain)OSD_mapping for vestel ---pingan
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_OSD_3D_MAPPING_SHARPNESS},//(SHARPNESS global gain)OSD_mapping for vestel ---pingan
    
    //TDSHARPALL
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARPALL_COR_ZERO},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARPALL_COR_RATIO},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARPALL_COR_THR},
    {0x00, 0x80, 0x20, FROM_DFT, QUALITY_TDSHARPALL_GAIN},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARPALL_LIMIT},
    {0x00, 0x00, 0x0F, FROM_DFT, QUALITY_TDSHARPALL_LIMIT_RATIO},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARPALL_BOUND},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_TDSHARPALL_CLIP_RATIO},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARPALL_CLIP_POS},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_TDSHARPALL_CLIP_NEG},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARPALL_SAT_PROC},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARPALL_AC_LPF_COE},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_TDSHARPALL_YLEV_EN},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_TDSHARPALL_YLEV_ADAP_ENA},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_TDSHARPALL_YLEV_ADL_ENA},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_TDSHARPALL_YLEV_APL_ENA},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_TDSHARPALL_YLEV_ADL_GAIN},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_TDSHARPALL_YLEV_APL_ZERO},
    {0x00, 0x00, 0x03, FROM_DFT, QUALITY_TDSHARPALL_YLEV_APL_THR},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARPALL_YLEV_P1},
    {0x00, 0x00, 0x04, FROM_DFT, QUALITY_TDSHARPALL_YLEV_P2},
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_TDSHARPALL_YLEV_P3},
    {0x00, 0x00, 0x0E, FROM_DFT, QUALITY_TDSHARPALL_YLEV_P4},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_TDSHARPALL_YLEV_G1},
    {0x00, 0x00, 0x60, FROM_DFT, QUALITY_TDSHARPALL_YLEV_G2},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_TDSHARPALL_YLEV_G3},
    {0x00, 0x00, 0x60, FROM_DFT, QUALITY_TDSHARPALL_YLEV_G4},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_TDSHARPALL_MO_SHP_EN},    
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_TDSHARPALL_MO_SHP_LEVEL},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_TDSHARPALL_BNR_SHP_EN},
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_TDSHARPALL_BNR_SHP_LEVEL},

    // 3D sharpness
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_FS_H},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_FS_V},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_TTD_H},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_TTD_V},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_SBS_H},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_SBS_V},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_TB_H},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_TB_V},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_SS_H},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_SS_V},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_RD_H},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_RD_V},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_LI_H},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_LI_V},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_CB_H},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_CB_V},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_DA_H},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SHARP_3D_DA_V},

    //CTIF
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_CTIF_ENA},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_CTIF_HD},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIF_LPF1},
    {0x00, 0x00, 0x03, FROM_DFT, QUALITY_CTIF_LPF1_SEL},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIF_FLPF},
    {0x00, 0x00, 0x03, FROM_DFT, QUALITY_CTIF_FLPF_SEL},
    {0x00, 0x03, 0x00, FROM_DFT, QUALITY_CTIF_U_WND_SZ},
    {0x00, 0x03, 0x00, FROM_DFT, QUALITY_CTIF_V_WND_SZ},
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_CTIF_U_STB_GAIN},
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_CTIF_V_STB_GAIN},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_CTIF_U_STB_OFST1},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_CTIF_V_STB_OFST1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIF_U_STB_OFST2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIF_V_STB_OFST2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIF_FLAT_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIF_FLAT_OFST1},
    {0x00, 0x00, 0x60, FROM_DFT, QUALITY_CTIF_FLAT_OFST2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIF_COR},

    // CTIR
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_CTIR_ENA},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_CTIR_HD},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIR_LPF1},
    {0x00, 0x00, 0x03, FROM_DFT, QUALITY_CTIR_LPF1_SEL},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIR_FLPF},
    {0x00, 0x00, 0x03, FROM_DFT, QUALITY_CTIR_FLPF_SEL},
    {0x00, 0x00, 0x05, FROM_DFT, QUALITY_CTIR_U_WND_SZ},
    {0x00, 0x00, 0x05, FROM_DFT, QUALITY_CTIR_V_WND_SZ},
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_CTIR_U_STB_GAIN},
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_CTIR_V_STB_GAIN},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_CTIR_U_STB_OFST1},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_CTIR_V_STB_OFST1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIR_U_STB_OFST2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIR_V_STB_OFST2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIR_FLAT_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIR_FLAT_OFST1},
    {0x00, 0x00, 0x60, FROM_DFT, QUALITY_CTIR_FLAT_OFST2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_CTIR_COR},

    // CBE
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_CBE_WEI_IT3},
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_CBE_WEI_IT5},

    // 2DNR
    {0x00, 0x08, 0x04, FROM_DFT, QUALITY_2DNR_NX_BNR_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_HBLK_MIN_LINE_SUM},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_VBLK_MIN_LINE_SUM},
    {0x00, 0x08, 0x04, FROM_DFT, QUALITY_2DNR_NX_MNR_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_MNR_EDGE_TH},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_MNR_LERE_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_MNR_LERF_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_MNR_LFRE_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_MNR_UEDE_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_MNR_UEDF_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_MNR_UFDE_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_MNR_GROUPING_STR},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_MNR_STR_GAIN},
    {0x00, 0x08, 0x04, FROM_DFT, QUALITY_2DNR_NX_SNR_GAIN_Y},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_SNR_GAIN_C},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_SNR_COST_TH_DIR_ADAP},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_SNR_NOISE_COST_MODE},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_SNR_NOISE_REMOVAL_AUTO_TH_EDGE_STR},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_SNR_NOISE_REMOVAL_AUTO_TH_GENERAL_STR},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NR_SNR_MANUAL_AUTO_RATIO},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_THM_SEL},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_THM_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_THM_OFST},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_MAX_RTO_LVL_0},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_MAX_RTO_LVL_1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_MAX_RTO_LVL_2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_MAX_RTO_LVL_3},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_MAX_RTO_LVL_4},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_MAX_RTO_LVL_5},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_MAX_RTO_LVL_6},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_MAX_RTO_LVL_7},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_MAX_RTO_LVL_8},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_SNR_MAX_RTO_LVL_9},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_SNR_CHROMA_PRESERVATION},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_SNR_DEAD_ZONE_BRIGHT},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_SNR_DEAD_ZONE_DARK},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_2DNR_NX_SNR_DEAD_ZONE_TRANSITION},

    // 3DNR
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_3DNR_TNR_ACNR_STRENGTH},
    {0x00, 0x1F, 0x17, FROM_DFT, QUALITY_3DNR_NR_IIR_MAX_WEI},
    {0x00, 0x10, 0x08, FROM_DFT, QUALITY_3DNR_NR_IIR_MAX_WEI_E},
    {0x03, 0x09, 0x09, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_0},
    {0x04, 0x0B, 0x0B, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_1},
    {0x03, 0x0A, 0x0A, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_2},
    {0x02, 0x08, 0x08, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_3},
    {0x02, 0x05, 0x05, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_4},
    {0x01, 0x03, 0x03, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_5},
    {0x01, 0x01, 0x01, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_6},
    {0x01, 0x01, 0x01, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_7},
    {0x00, 0x00, 0x09, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_E_0},
    {0x00, 0x00, 0x0B, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_E_1},
    {0x00, 0x00, 0x0A, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_E_2},
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_E_3},
    {0x00, 0x00, 0x05, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_E_4},
    {0x00, 0x00, 0x03, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_E_5},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_E_6},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_3DNR_NR_TBL_MA_E_7},
    {0x03, 0x09, 0x09, FROM_DFT, QUALITY_3DNR_NR_TBL_C_0},
    {0x04, 0x0B, 0x0B, FROM_DFT, QUALITY_3DNR_NR_TBL_C_1},
    {0x03, 0x0A, 0x0A, FROM_DFT, QUALITY_3DNR_NR_TBL_C_2},
    {0x02, 0x08, 0x08, FROM_DFT, QUALITY_3DNR_NR_TBL_C_3},
    {0x02, 0x05, 0x05, FROM_DFT, QUALITY_3DNR_NR_TBL_C_4},
    {0x01, 0x03, 0x03, FROM_DFT, QUALITY_3DNR_NR_TBL_C_5},
    {0x01, 0x01, 0x01, FROM_DFT, QUALITY_3DNR_NR_TBL_C_6},
    {0x01, 0x01, 0x01, FROM_DFT, QUALITY_3DNR_NR_TBL_C_7},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_3DNR_NR_MOVINGTXR_SUB_WEI_BASE_DFT},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_3DNR_NR_MOVINGTXR_SUB_WEI_NL_NAG_GAIN_DFT},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_3DNR_TNR_MA_NOISE_ADD_WEI_BASE},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_3DNR_TNR_MA_NOISE_ADD_WEI_NL_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_3DNR_TNR_MA_PRTRBTN_ADD_WEI_BASE},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_3DNR_TNR_MA_PRTRBTN_ADD_WEI_STILL_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_3DNR_TNR_STILL_GMV_ASSIST_DE_PRTRBTN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_3DNR_TNR_CS_NOISE_ADD_WEI_BASE},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_3DNR_TNR_CS_NOISE_ADD_WEI_NL_GAIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_3DNR_TNR_CHROMA_MOVINGTXR_SUB_WEI_MAX},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_3DNR_TNR_CHROMA_DC_ADD_WEI_MAX},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_3DNR_TNR_CHROMA_DC_DIFF_BND},

    // ANR
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_SAT_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_H_CORING_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_LCSHARP_MID_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_LCSHARP_HIGH_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TH_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL7_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL6_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL5_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL4_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL3_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL2_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL1_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL0_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEGE_TH_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL7_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL6_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL5_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL4_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL3_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL2_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL1_LV0},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL0_LV0},

    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_SAT_LV1},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_H_CORING_LV1},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_LCSHARP_MID_LV1},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_LCSHARP_HIGH_LV1},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TH_LV1},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL7_LV1},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL6_LV1},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL5_LV1},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL4_LV1},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL3_LV1},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL2_LV1},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL1_LV1},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL0_LV1},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEGE_TH_LV1},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL7_LV1},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL6_LV1},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL5_LV1},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL4_LV1},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL3_LV1},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL2_LV1},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL1_LV1},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL0_LV1},

    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_SAT_LV2},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_H_CORING_LV2},
    {0x00,0x00,0x04,FROM_DFT, QUALITY_ANR_LCSHARP_MID_LV2},
    {0x00,0x00,0x04,FROM_DFT, QUALITY_ANR_LCSHARP_HIGH_LV2},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TH_LV2},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL7_LV2},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL6_LV2},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL5_LV2},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL4_LV2},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL3_LV2},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL2_LV2},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL1_LV2},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL0_LV2},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEGE_TH_LV2},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL7_LV2},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL6_LV2},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL5_LV2},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL4_LV2},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL3_LV2},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL2_LV2},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL1_LV2},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL0_LV2},

    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_SAT_LV3},
    {0x00,0x00,0x03,FROM_DFT, QUALITY_ANR_H_CORING_LV3},
    {0x00,0x00,0x06,FROM_DFT, QUALITY_ANR_LCSHARP_MID_LV3},
    {0x00,0x00,0x06,FROM_DFT, QUALITY_ANR_LCSHARP_HIGH_LV3},
    {0x00,0x00,0x03,FROM_DFT, QUALITY_ANR_DEF_TH_LV3},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL7_LV3},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_DEF_TBL6_LV3},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL5_LV3},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL4_LV3},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL3_LV3},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL2_LV3},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL1_LV3},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL0_LV3},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_MOEGE_TH_LV3},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL7_LV3},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL6_LV3},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL5_LV3},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL4_LV3},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL3_LV3},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL2_LV3},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL1_LV3},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL0_LV3},

    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_SAT_LV4},
    {0x00,0x00,0x04,FROM_DFT, QUALITY_ANR_H_CORING_LV4},
    {0x00,0x00,0x08,FROM_DFT, QUALITY_ANR_LCSHARP_MID_LV4},
    {0x00,0x00,0x08,FROM_DFT, QUALITY_ANR_LCSHARP_HIGH_LV4},
    {0x00,0x00,0x04,FROM_DFT, QUALITY_ANR_DEF_TH_LV4},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL7_LV4},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL6_LV4},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL5_LV4},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL4_LV4},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL3_LV4},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL2_LV4},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL1_LV4},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL0_LV4},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_MOEGE_TH_LV4},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_MOEDGE_TBL7_LV4},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL6_LV4},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL5_LV4},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL4_LV4},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL3_LV4},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL2_LV4},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL1_LV4},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL0_LV4},  

    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_SAT_LV5},
    {0x00,0x00,0x04,FROM_DFT, QUALITY_ANR_H_CORING_LV5},
    {0x00,0x00,0x08,FROM_DFT, QUALITY_ANR_LCSHARP_MID_LV5},
    {0x00,0x00,0x08,FROM_DFT, QUALITY_ANR_LCSHARP_HIGH_LV5},
    {0x00,0x00,0x05,FROM_DFT, QUALITY_ANR_DEF_TH_LV5},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL7_LV5},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL6_LV5},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL5_LV5},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL4_LV5},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL3_LV5},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL2_LV5},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL1_LV5},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL0_LV5},
    {0x00,0x00,0x03,FROM_DFT, QUALITY_ANR_MOEGE_TH_LV5},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_MOEDGE_TBL7_LV5},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL6_LV5},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL5_LV5},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL4_LV5},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL3_LV5},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL2_LV5},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL1_LV5},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL0_LV5},  

    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_SAT_LV6},
    {0x00,0x00,0x04,FROM_DFT, QUALITY_ANR_H_CORING_LV6},
    {0x00,0x00,0x08,FROM_DFT, QUALITY_ANR_LCSHARP_MID_LV6},
    {0x00,0x00,0x08,FROM_DFT, QUALITY_ANR_LCSHARP_HIGH_LV6},
    {0x00,0x00,0x06,FROM_DFT, QUALITY_ANR_DEF_TH_LV6},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL7_LV6},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL6_LV6},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL5_LV6},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL4_LV6},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL3_LV6},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL2_LV6},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL1_LV6},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL0_LV6},
    {0x00,0x00,0x04,FROM_DFT, QUALITY_ANR_MOEGE_TH_LV6},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_MOEDGE_TBL7_LV6},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL6_LV6},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL5_LV6},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL4_LV6},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL3_LV6},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL2_LV6},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL1_LV6},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL0_LV6},

    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_SAT_LV7},
    {0x00,0x00,0x04,FROM_DFT, QUALITY_ANR_H_CORING_LV7},
    {0x00,0x00,0x08,FROM_DFT, QUALITY_ANR_LCSHARP_MID_LV7},
    {0x00,0x00,0x08,FROM_DFT, QUALITY_ANR_LCSHARP_HIGH_LV7},
    {0x00,0x00,0x07,FROM_DFT, QUALITY_ANR_DEF_TH_LV7},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL7_LV7},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL6_LV7},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL5_LV7},
    {0x00,0x00,0x01,FROM_DFT, QUALITY_ANR_DEF_TBL4_LV7},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL3_LV7},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL2_LV7},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL1_LV7},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_DEF_TBL0_LV7},
    {0x00,0x00,0x04,FROM_DFT, QUALITY_ANR_MOEGE_TH_LV7},
    {0x00,0x00,0x02,FROM_DFT, QUALITY_ANR_MOEDGE_TBL7_LV7},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL6_LV7},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL5_LV7},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL4_LV7},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL3_LV7},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL2_LV7},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL1_LV7},
    {0x00,0x00,0x00,FROM_DFT, QUALITY_ANR_MOEDGE_TBL0_LV7},

    // Adaptive Luma 
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_ON_1_OFF_0},  
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_AL2_AL_VERSION},
	{0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL2_HISTOGRAM_MODE},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_AL_AL_VERSION},    //for vestel, pingan
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_HISTOGRAM_MODE},//for vestel, pingan

    // CBOOST for vestel ---6a pingan
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_CBOOST_ONOFF},    
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_CBOOST_MINUS_EN}, 
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_AL_CBOOST_GAIN},     
    {0x00, 0x00, 0x02, FROM_DFT, QUALITY_AL_CBOOST_RNG_SEL},    
    {0x00, 0x00, 0x98, FROM_DFT, QUALITY_AL_CBOOST_LMT_U},     
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_AL_CBOOST_LMT_L},    

	// Adaptive Luma: Common setting
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_ALCOM_YGAMMA_DECAY_BRIGHT},         
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_ALCOM_YGAMMA_DECAY_LO},         
    {0x00, 0x00, 0x40, FROM_DFT, QUALITY_ALCOM_YGAMMA_DECAY_HI},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_ALCOM_YGAMMA_SEL},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_ALCOM_YGAMMA_MID_SEL},
	{0x00, 0x00, 0x00, FROM_DFT, QUALITY_ALCOM_YGAMMA_SKIN_MID_SEL},        
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_ALCOM_SKIN_LUMA_EN},
	{0x00, 0x00, 0x98, FROM_DFT, QUALITY_ALCOM_CURVE_WEIGHT},
	{0x00, 0x00, 0x00, FROM_DFT, QUALITY_ALCOM_BLEND_METHOD},	

    // Adaptive Luma: Common setting ---9a pingan
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_AL_YGAMMA_DECAY_BRIGHT},         
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_AL_YGAMMA_DECAY_LO},         
    {0x00, 0x00, 0x40, FROM_DFT, QUALITY_AL_YGAMMA_DECAY_HI},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_AL_YGAMMA_SEL},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_AL_YGAMMA_MID_SEL},
	{0x00, 0x00, 0x00, FROM_DFT, QUALITY_AL_YGAMMA_SKIN_MID_SEL},        
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_SKIN_LUMA_EN},
	{0x00, 0x00, 0x98, FROM_DFT, QUALITY_AL_CURVE_WEIGHT},
	{0x00, 0x00, 0x00, FROM_DFT, QUALITY_AL_BLEND_METHOD},	

    // Adaptive Luma Version 1: MID
    {0x00, 0xE0, 0x40, FROM_DFT, QUALITY_AL_GAIN},
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_AL_OFFSET},
    {0x00, 0x00, 0xC0, FROM_DFT, QUALITY_AL_LIMIT},
    // Adaptive Luma Version 2: MID
	{0x00, 0x00, 0x0F, FROM_DFT, QUALITY_AL2_WEIGHT1},
	{0x00, 0x00, 0x1C, FROM_DFT, QUALITY_AL2_WEIGHT2},	
	{0x40, 0xFF, 0xE1, FROM_DFT, QUALITY_AL2_MID_AC_GAIN},
	{0x00, 0x00, 0x49, FROM_DFT, QUALITY_AL2_MID_DC_GAIN},
    // Adaptive Luma Version 2; MID ---4a pingan
	{0x00, 0x00, 0x0F, FROM_DFT, QUALITY_AL_WEIGHT1},
	{0x00, 0x00, 0x1C, FROM_DFT, QUALITY_AL_WEIGHT2},	
	{0x40, 0xFF, 0xE1, FROM_DFT, QUALITY_AL_MID_AC_GAIN},
	{0x00, 0x00, 0x49, FROM_DFT, QUALITY_AL_MID_DC_GAIN},

    // Adaptive Luma Version 1: Black Stretch
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_BWS_BLACK_ON_1_OFF_0},
    {0x00, 0x00, 0x04, FROM_DFT, QUALITY_AL_BWS_BLACK_LEVEL},
    {0x00, 0x60, 0x20, FROM_DFT, QUALITY_AL_BWS_BLACK_GAIN},
    {0x00, 0x20, 0x08, FROM_DFT, QUALITY_AL_BWS_BLACK_OFFSET},
    {0x00, 0x00, 0x60, FROM_DFT, QUALITY_AL_BWS_BLACK_RATIO},
    {0x00, 0x00, 0x14, FROM_DFT, QUALITY_AL_BWS_BLACK_LIMIT},
    // Adaptive Luma Version 1: Dynamic Black Stretch
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_DYNBS_EN},
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_AL_DYNBS_RANGE}, 
    {0x00, 0x00, 0x7D, FROM_DFT, QUALITY_AL_DYNBS_PXL_THD1},      // 250 >> 1
    {0x00, 0x00, 0xC8, FROM_DFT, QUALITY_AL_DYNBS_PXL_THD2},      // 400 >> 1
    {0x00, 0x00, 0xC8, FROM_DFT, QUALITY_AL_DYNBS_DIST_THDH},     // 200
    {0x00, 0x00, 0x8C, FROM_DFT, QUALITY_AL_DYNBS_DIST_THDM},     // 150
    {0x00, 0x00, 0x64, FROM_DFT, QUALITY_AL_DYNBS_DIST_THDL},     // 100   
    {0x00, 0x00, 0x74, FROM_DFT, QUALITY_AL_DYNBS_LMT_BTM},     // 116;   // -12
    {0x00, 0x00, 0xA4, FROM_DFT, QUALITY_AL_DYNBS_LMT_TOP},     // 164;   // +36
    {0x00, 0x00, 0x60, FROM_DFT, QUALITY_AL_DYNBS_GAIN_BTM},     // 96;   // -32
    {0x00, 0x00, 0x98, FROM_DFT, QUALITY_AL_DYNBS_GAIN_TOP},     // 152;  // +24
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_AL_DYNBS_OFST_BTM},     // 128;  // 0
    {0x00, 0x00, 0x98, FROM_DFT, QUALITY_AL_DYNBS_OFST_TOP},     // 152;  // +24
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_BWS_KEEP_MID_ONOFF},
    {0x00, 0x00, 0x0D, FROM_DFT, QUALITY_AL_BWS_KEEP_MID_X_LVL},  // add 2 to represent real level
    {0x00, 0x00, 0x78, FROM_DFT, QUALITY_AL_BWS_KEEP_MID_Y_POS},  // 8 bit to represent 10 bit resolution, shift 2 bit
    // Adaptive Luma Version 2: Black Stretch
	{0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL2_BWS_BK_EN},
	{0x00, 0x00, 0x07, FROM_DFT, QUALITY_AL2_BWS_BK_LEVEL},
	{0x40, 0xFF, 0x40, FROM_DFT, QUALITY_AL2_BWS_BK_AC_GAIN_RATIO},
	{0x00, 0x00, 0x73, FROM_DFT, QUALITY_AL2_BWS_BK_DC_GAIN_RATIO},
	{0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL2_BWS_BK_ADPTLMT_EN},
	{0x00, 0x00, 0x52, FROM_DFT, QUALITY_AL2_BWS_BK_RATIO},
	{0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL2_BWS_BK_STROFT_EN},
	{0x00, 0x30, 0x0E, FROM_DFT, QUALITY_AL2_BWS_BK_OFST_L},
	{0x20, 0x60, 0x60, FROM_DFT, QUALITY_AL2_BWS_BK_OFST_H},
	{0x00, 0x00, 0x09, FROM_DFT, QUALITY_AL2_BWS_BK_OFST_TH_L},
	{0x00, 0x00, 0x58, FROM_DFT, QUALITY_AL2_BWS_BK_OFST_TH_H},
    // Adaptive Luma Version 2: Black Stretch ---11a pingan
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_BWS_BK_EN},
    {0x00, 0x00, 0x07, FROM_DFT, QUALITY_AL_BWS_BK_LEVEL},
    {0x40, 0xFF, 0x40, FROM_DFT, QUALITY_AL_BWS_BK_AC_GAIN_RATIO},
    {0x00, 0x00, 0x73, FROM_DFT, QUALITY_AL_BWS_BK_DC_GAIN_RATIO},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_BWS_BK_ADPTLMT_EN},
    {0x00, 0x00, 0x52, FROM_DFT, QUALITY_AL_BWS_BK_RATIO},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_BWS_BK_STROFT_EN},
    {0x00, 0x30, 0x0E, FROM_DFT, QUALITY_AL_BWS_BK_OFST_L},
    {0x20, 0x60, 0x60, FROM_DFT, QUALITY_AL_BWS_BK_OFST_H},
    {0x00, 0x00, 0x09, FROM_DFT, QUALITY_AL_BWS_BK_OFST_TH_L},
    {0x00, 0x00, 0x58, FROM_DFT, QUALITY_AL_BWS_BK_OFST_TH_H},

    // Adaptive Luma Version 1: White Stretch
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_BWS_WHITE_ON_1_OFF_0},
    {0x00, 0x00, 0x04, FROM_DFT, QUALITY_AL_BWS_WHITE_LEVEL},
    {0x00, 0x60, 0x40, FROM_DFT, QUALITY_AL_BWS_WHITE_GAIN},
    {0x00, 0x20, 0x00, FROM_DFT, QUALITY_AL_BWS_WHITE_OFFSET},
    {0x00, 0x00, 0x40, FROM_DFT, QUALITY_AL_BWS_WHITE_RATIO},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_AL_BWS_WHITE_LIMIT},         
    // Adaptive Luma Version 2: White Stretch
	{0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL2_BWS_WT_EN},
	{0x00, 0x00, 0x0A, FROM_DFT, QUALITY_AL2_BWS_WT_LEVEL},
	{0x40, 0xFF, 0x4E, FROM_DFT, QUALITY_AL2_BWS_WT_AC_GAIN_RATIO},
	{0x00, 0x00, 0x56, FROM_DFT, QUALITY_AL2_BWS_WT_DC_GAIN_RATIO},
	{0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL2_BWS_WT_ADPTLMT_EN},
	{0x00, 0x00, 0x04, FROM_DFT, QUALITY_AL2_BWS_WT_RATIO},
	{0x00, 0x00, 0x00, FROM_DFT, QUALITY_AL2_BWS_WT_STROFT_EN},
	{0x00, 0x30, 0x12, FROM_DFT, QUALITY_AL2_BWS_WT_OFST_L},
	{0x20, 0x60, 0x2F, FROM_DFT, QUALITY_AL2_BWS_WT_OFST_H},
	{0x00, 0x00, 0x04, FROM_DFT, QUALITY_AL2_BWS_WT_OFST_TH_L},
	{0x00, 0x00, 0x47, FROM_DFT, QUALITY_AL2_BWS_WT_OFST_TH_H},

    // Adaptive Luma Version 2: White Stretch ---11a pingan
	{0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_BWS_WT_EN},
	{0x00, 0x00, 0x0A, FROM_DFT, QUALITY_AL_BWS_WT_LEVEL},
	{0x40, 0xFF, 0x4E, FROM_DFT, QUALITY_AL_BWS_WT_AC_GAIN_RATIO},
	{0x00, 0x00, 0x56, FROM_DFT, QUALITY_AL_BWS_WT_DC_GAIN_RATIO},
	{0x00, 0x00, 0x01, FROM_DFT, QUALITY_AL_BWS_WT_ADPTLMT_EN},
	{0x00, 0x00, 0x04, FROM_DFT, QUALITY_AL_BWS_WT_RATIO},
	{0x00, 0x00, 0x00, FROM_DFT, QUALITY_AL_BWS_WT_STROFT_EN},
	{0x00, 0x30, 0x12, FROM_DFT, QUALITY_AL_BWS_WT_OFST_L},
	{0x20, 0x60, 0x2F, FROM_DFT, QUALITY_AL_BWS_WT_OFST_H},
	{0x00, 0x00, 0x04, FROM_DFT, QUALITY_AL_BWS_WT_OFST_TH_L},
	{0x00, 0x00, 0x47, FROM_DFT, QUALITY_AL_BWS_WT_OFST_TH_H},
    
    // RGB GAIN/OFFSET
    {0x9c, 0x64, 0xE0, FROM_DFT, QUALITY_R_GAIN},
    {0x9c, 0x64, 0x00, FROM_DFT, QUALITY_G_GAIN},
    {0x9c, 0x64, 0xFC, FROM_DFT, QUALITY_B_GAIN},
    {0x01, 0x02, 0x01, FROM_DFT, QUALITY_R_GAIN_MSB},
    {0x01, 0x02, 0x02, FROM_DFT, QUALITY_G_GAIN_MSB},
    {0x01, 0x02, 0x01, FROM_DFT, QUALITY_B_GAIN_MSB},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_R_OFFSET},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_G_OFFSET},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_B_OFFSET},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_R_OFFSET_MSB},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_G_OFFSET_MSB},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_B_OFFSET_MSB},

    // Quality Table of OSD_MAPPING(R G B GAIN) ---12a pingan
    {0x9c, 0x64, 0x00, FROM_DFT, QUALITY_OSD_MAPPING_R_GAIN},
    {0x9c, 0x64, 0x00, FROM_DFT, QUALITY_OSD_MAPPING_3D_R_GAIN},//3D
    {0x9c, 0x64, 0x00, FROM_DFT, QUALITY_OSD_MAPPING_G_GAIN},
    {0x9c, 0x64, 0x00, FROM_DFT, QUALITY_OSD_MAPPING_3D_G_GAIN},//3D
    {0x9c, 0x64, 0x00, FROM_DFT, QUALITY_OSD_MAPPING_B_GAIN},
    {0x9c, 0x64, 0x00, FROM_DFT, QUALITY_OSD_MAPPING_3D_B_GAIN},//3D
    {0x01, 0x02, 0x02, FROM_DFT, QUALITY_OSD_MAPPING_R_GAIN_MSB},
    {0x01, 0x02, 0x02, FROM_DFT, QUALITY_OSD_MAPPING_3D_R_GAIN_MSB},//3D
    {0x01, 0x02, 0x02, FROM_DFT, QUALITY_OSD_MAPPING_G_GAIN_MSB},
    {0x01, 0x02, 0x02, FROM_DFT, QUALITY_OSD_MAPPING_3D_G_GAIN_MSB},//3D
    {0x01, 0x02, 0x02, FROM_DFT, QUALITY_OSD_MAPPING_B_GAIN_MSB},
    {0x01, 0x02, 0x02, FROM_DFT, QUALITY_OSD_MAPPING_3D_B_GAIN_MSB},//3D

    // BLUE STRETCH
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_BLUE_STRETCH_ENABLE},
    {0x00, 0x00, 0x78, FROM_DFT, QUALITY_BLUE_STRETCH_GAIN_R},
    {0x00, 0x00, 0x78, FROM_DFT, QUALITY_BLUE_STRETCH_GAIN_G},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_BLUE_STRETCH_GAIN_B},
    {0x00, 0x00, 0xA0, FROM_DFT, QUALITY_BLUE_STRETCH_LUMA_THD},
    {0x00, 0x00, 0x0A, FROM_DFT, QUALITY_BLUE_STRETCH_SAT_THD},    

    //GAMMA
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_GAMMA_CURVE_SEL},

    //SCE
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SCE_LUMA_GAIN},
    {0x40, 0xC0, 0x80, FROM_DFT, QUALITY_SCE_SAT_GAIN},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SCE_HUE_GAIN},

    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_CBOOST_ONOFF},    
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_CBOOST_MINUS_EN}, 
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_CBOOST_GAIN},     
    {0x00, 0x00, 0x02, FROM_DFT, QUALITY_CBOOST_RNG_SEL},    
    {0x00, 0x00, 0x98, FROM_DFT, QUALITY_CBOOST_LMT_U},     
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_CBOOST_LMT_L},    

    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_LCN_ONOFF},    
    {0x00, 0x00, 0x7F, FROM_DFT, QUALITY_LCN_LIRE_GAIN},    
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_LCN_LIRE_YTH},    
    {0x00, 0x00, 0x04, FROM_DFT, QUALITY_LCN_LIRE_YSLOPE}, 
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_LCN_LIRE_STH},     
    {0x00, 0x00, 0x04, FROM_DFT, QUALITY_LCN_LIRE_SSLOPE},     
    {0x00, 0x00, 0x7F, FROM_DFT, QUALITY_LCN_LSAT_GAIN},    
    {0x00, 0x00, 0x05, FROM_DFT, QUALITY_LCN_LSAT_STH},     
    {0x00, 0x00, 0x06, FROM_DFT, QUALITY_LCN_LSAT_SSLOPE},    

    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_SKIN_ONOFF},    
    {0x00, 0x00, 0x57, FROM_DFT, QUALITY_SKIN_YMIN},    
    {0x00, 0x00, 0xB6, FROM_DFT, QUALITY_SKIN_YMAX},     
    {0x00, 0x00, 0x02, FROM_DFT, QUALITY_SKIN_YSLOPE}, 
    {0x00, 0x00, 0x11, FROM_DFT, QUALITY_SKIN_SMIN},    
    {0x00, 0x00, 0x1D, FROM_DFT, QUALITY_SKIN_SMAX},    
    {0x00, 0x00, 0x04, FROM_DFT, QUALITY_SKIN_SSLOPE},     
    {0x00, 0x00, 0x56, FROM_DFT, QUALITY_SKIN_HMIN},
    {0x00, 0x00, 0x67, FROM_DFT, QUALITY_SKIN_HMAX},    
    {0x00, 0x00, 0x02, FROM_DFT, QUALITY_SKIN_HSLOPE},

    // SKIN    
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SKIN_LUMA_GAIN},
    {0x40, 0xC0, 0x80, FROM_DFT, QUALITY_SKIN_SAT_GAIN},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_SKIN_HUE_GAIN},

    // Quality Table of Color --- pingan
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_Y_R},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_Y_G},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_Y_B},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_Y_Y},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_Y_C},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_Y_M},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_S_R},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_S_G},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_S_B},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_S_Y},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_S_C},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_S_M},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_H_R},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_H_G},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_H_B},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_H_Y},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_H_C},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_COLOR_H_M},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_SKIN_L},
    {0x40, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_SKIN_S},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_SKIN_H},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_SKIN_L},//3D
    {0x40, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_SKIN_S},//3D
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_SKIN_H},//3D
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_SCE_L},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_SCE_S},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_SCE_H},

    // Quality Table of Color 3D ---pingan
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_Y_R},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_Y_G},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_Y_B},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_Y_Y},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_Y_C},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_Y_M},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_S_R},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_S_G},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_S_B},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_S_Y},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_S_C},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_S_M},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_H_R},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_H_G},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_H_B},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_H_Y},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_H_C},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_COLOR_H_M},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_SCE_L},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_SCE_S},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_COLOR_3D_SCE_H},

    // Quality Table of Decoder  ---pingan
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_DECODER_AGC2_MODE},
    {0x00, 0x00, 0x40, FROM_DFT, QUALITY_DECODER_AGC2_MANUAL_ACODE},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_DECODER_AGC2_MANUAL_DCODE},
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_DECODER_AGC2_MANUAL_DCODE_HIBYTE},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_DECODER_AAF_SEL},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_DECODER_MACC_EN},
    {0x00, 0x00, 0x04, FROM_DFT, QUALITY_DECODER_MACC},

    // Quality Table of COMB ---pingan
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_W_BASE_COST_3D},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_W_CHECKER_BOARD_COST},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_W_CROSS_COLOR_COST},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_W_INTERNAL_COST_PD},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_W_INTERNAL_COST_Y_PD},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_W_ALIASING_COST},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_W_YC_MOTION_COST},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_W_CHROMA_COST_2D},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_W_INTERNAL_COST_2D},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_W_MOTION_COST_2D},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_W_OFFSET_2D},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_FW_3D_COST},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_COMB_CB_3D_FW_2D_COST},

    // Quality Table of DI_FILM ---pingan
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_DI_FILM_FR_MO_FILTER_L},
    {0x00, 0x00, 0x28, FROM_DFT, QUALITY_DI_FILM_FR_MO_FILTER_H},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_DI_FILM_FR_MO_LARGE_BIT},
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_DI_FILM_EG_MO_FILTER_L},
    {0x00, 0x00, 0x28, FROM_DFT, QUALITY_DI_FILM_EG_MO_FILTER_H},
    {0x00, 0x00, 0x0A, FROM_DFT, QUALITY_DI_FILM_EG_MO_LARGE_BIT},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_DI_FILM_FR_MIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_DI_FILM_FR_MIN_HIBYTE},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_DI_FILM_FR_MAX},
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_DI_FILM_FR_MAX_HIBYTE},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_DI_FILM_EG_MIN},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_DI_FILM_EG_MIN_HIBYTE},
    {0x00, 0x00, 0x60, FROM_DFT, QUALITY_DI_FILM_EG_MAX_START_32},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_DI_FILM_EG_MAX_START_32_HIBYTE},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_DI_FILM_EG_MAX_END_32},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_DI_FILM_EG_MAX_END_32_HIBYTE},
    {0x00, 0x00, 0x60, FROM_DFT, QUALITY_DI_FILM_EG_MAX_START_22},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_DI_FILM_EG_MAX_START_22_HIBYTE},
    {0x00, 0x00, 0x80, FROM_DFT, QUALITY_DI_FILM_EG_MAX_END_22},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_DI_FILM_EG_MAX_END_22_HIBYTE},
    {0x00, 0x00, 0x11, FROM_DFT, QUALITY_DI_FILM_EG_MAX_END_BIT},
    {0x00, 0x00, 0x03, FROM_DFT, QUALITY_DI_FILM_FR_RATE},
    {0x00, 0x00, 0x02, FROM_DFT, QUALITY_DI_FILM_EG_RATE_32},
    {0x00, 0x00, 0x03, FROM_DFT, QUALITY_DI_FILM_EG_RATE_22},
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_DI_FILM_SUBTITLE_RATE},

    // Quality Table of BACKLIGHT ---pingan
    {0x00, 0x00, 0x75, FROM_DFT, QUALITY_BACKLIGHT_VIDEO_PWM_MIN},
    {0x00, 0x00, 0xB5, FROM_DFT, QUALITY_BACKLIGHT_VIDEO_PWM_MED},
    {0x00, 0x00, 0xFF, FROM_DFT, QUALITY_BACKLIGHT_VIDEO_PWM_MAX},
    {0x00, 0x00, 0x88, FROM_DFT, QUALITY_BACKLIGHT_VIDEO_PWM_ECO},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_BACKLIGHT_DBL_AUTO_ENABLE},
    {0x00, 0x00, 0x14, FROM_DFT, QUALITY_BACKLIGHT_DBL_AUTO_APL_PERCENT},
    {0x00, 0x00, 0x32, FROM_DFT, QUALITY_BACKLIGHT_DBL_AUTO_BLACK_PERCENT},
    {0x00, 0x00, 0x03, FROM_DFT, QUALITY_BACKLIGHT_DBL_AUTO_PWM_MIN},
    {0x00, 0x00, 0x08, FROM_DFT, QUALITY_BACKLIGHT_DBL_OSD_EVENT_PWM},
    {0x00, 0x00, 0x06, FROM_DFT, QUALITY_BACKLIGHT_DBL_DECREASE_CNT},
    {0x00, 0x00, 0x01, FROM_DFT, QUALITY_BACKLIGHT_DBL_INCREASE_CNT},
    {0x00, 0x00, 0x03, FROM_DFT, QUALITY_BACKLIGHT_DBL_PANEL_MIN_PWM},
    {0x00, 0x00, 0x88, FROM_DFT, QUALITY_BACKLIGHT_ECO_SWITCH_HI_LIMIT},
    {0x00, 0x00, 0x03, FROM_DFT, QUALITY_BACKLIGHT_ECO_SWITCH_LO_LIMIT},

    // Quality Table of OSD_MAPPING ---pingan
    {0x00, 0x3F, 0x3F, FROM_DFT, QUALITY_OSD_MAPPING_CONTRASTDFT},
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_OSD_MAPPING_BRIGHTNESSDFT},
    {0x00, 0x00, 0x28, FROM_DFT, QUALITY_OSD_MAPPING_SATURATIONDFT},
    {0x00, 0x00, 0x14, FROM_DFT, QUALITY_OSD_MAPPING_HUEDFT},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_OSD_MAPPING_SHARPNESSDFT},
    {0x00, 0x00, 0x05, FROM_DFT, QUALITY_OSD_MAPPING_SKINTONEDFT},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_OSD_MAPPING_REDGAINDFT},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_OSD_MAPPING_GREENGAINDFT},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_OSD_MAPPING_BLUEGAINDFT},

    // Quality Table of OSD_MAPPING_3D ---pingan
    {0x00, 0x3F, 0x3F, FROM_DFT, QUALITY_OSD_MAPPING_3D_CONTRASTDFT},
    {0x00, 0x00, 0x20, FROM_DFT, QUALITY_OSD_MAPPING_3D_BRIGHTNESSDFT},
    {0x00, 0x00, 0x28, FROM_DFT, QUALITY_OSD_MAPPING_3D_SATURATIONDFT},
    {0x00, 0x00, 0x14, FROM_DFT, QUALITY_OSD_MAPPING_3D_HUEDFT},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_OSD_MAPPING_3D_SHARPNESSDFT},
    {0x00, 0x00, 0x05, FROM_DFT, QUALITY_OSD_MAPPING_3D_SKINTONEDFT},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_OSD_MAPPING_3D_REDGAINDFT},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_OSD_MAPPING_3D_GREENGAINDFT},
    {0x00, 0x00, 0x10, FROM_DFT, QUALITY_OSD_MAPPING_3D_BLUEGAINDFT},

    // Quality Table of RESERVED_PAGE ---pingan
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_0},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_1},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_2},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_3},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_4},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_5},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_6},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_7},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_8},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_9},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_10},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_11},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_12},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_13},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_14},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_15},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_16},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_17},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_18},
    {0x00, 0x00, 0x00, FROM_DFT, QUALITY_RESERVED_PAGE_U1RESERVED_19}
};


/* bCustomQtyItem[]
 * This array describe the detail PQ item that can be fine tuned by NCSTool.
 * The other PQ items that is not included in this array will be referd to bDefaultQtyTbl[].
 */
UINT16 const CODE wCustomQtyItem[FLASHPQ_NUM][CUSTOM_QTY_TBL_DIM + TBL_HEAD_HASH] =
{
    {
        #include "QTY_ITEM.h"
    },
    #if (FLASHPQ_NUM>=2)
    {
        #include "QTY_ITEM_2ND.h"
    },
    #endif
    
};

UINT8 bCustomSrcTimingTbl[] =
{
    SOURCE_TYPE_TIMING_RFTV_NTSC_358,
    SOURCE_TYPE_TIMING_RFTV_NTSC_443,
    SOURCE_TYPE_TIMING_RFTV_PAL,
    SOURCE_TYPE_TIMING_RFTV_PAL_M,
    SOURCE_TYPE_TIMING_RFTV_PAL_N,
    SOURCE_TYPE_TIMING_RFTV_PAL_60,

    SOURCE_TYPE_TIMING_CVBS_NTSC_358,
    SOURCE_TYPE_TIMING_CVBS_NTSC_443,
    SOURCE_TYPE_TIMING_CVBS_PAL,
    SOURCE_TYPE_TIMING_CVBS_PAL_M,
    SOURCE_TYPE_TIMING_CVBS_PAL_N,
    SOURCE_TYPE_TIMING_CVBS_PAL_60,

    SOURCE_TYPE_TIMING_SV_NTSC_358,
    SOURCE_TYPE_TIMING_SV_NTSC_443,
    SOURCE_TYPE_TIMING_SV_PAL,
    SOURCE_TYPE_TIMING_SV_PAL_M,
    SOURCE_TYPE_TIMING_SV_PAL_N,
    SOURCE_TYPE_TIMING_SV_PAL_60,

    SOURCE_TYPE_TIMING_CVBS_NTSC_358_OS,
    SOURCE_TYPE_TIMING_CVBS_NTSC_443_OS,
    SOURCE_TYPE_TIMING_CVBS_PAL_OS,
    SOURCE_TYPE_TIMING_CVBS_PAL_M_OS,
    SOURCE_TYPE_TIMING_CVBS_PAL_N_OS,
    SOURCE_TYPE_TIMING_CVBS_PAL_60_OS,

    SOURCE_TYPE_TIMING_SV_NTSC_358_OS,
    SOURCE_TYPE_TIMING_SV_NTSC_443_OS,
    SOURCE_TYPE_TIMING_SV_PAL_OS,
    SOURCE_TYPE_TIMING_SV_PAL_M_OS,
    SOURCE_TYPE_TIMING_SV_PAL_N_OS,
    SOURCE_TYPE_TIMING_SV_PAL_60_OS,

    SOURCE_TYPE_TIMING_SECAM_RFTV,
    SOURCE_TYPE_TIMING_SECAM_CVBS,
    SOURCE_TYPE_TIMING_SECAM_SV,

    SOURCE_TYPE_TIMING_SCART_RGB,
    SOURCE_TYPE_TIMING_SCART_AV_NTSC_358,
    SOURCE_TYPE_TIMING_SCART_AV_NTSC_443,
    SOURCE_TYPE_TIMING_SCART_AV_PAL,
    SOURCE_TYPE_TIMING_SCART_AV_PAL_M,
    SOURCE_TYPE_TIMING_SCART_AV_PAL_N,
    SOURCE_TYPE_TIMING_SCART_AV_PAL_60,
    SOURCE_TYPE_TIMING_SCART_AV_SECAM,

    SOURCE_TYPE_TIMING_SCART_SV_NTSC_358,
    SOURCE_TYPE_TIMING_SCART_SV_NTSC_443,
    SOURCE_TYPE_TIMING_SCART_SV_PAL,
    SOURCE_TYPE_TIMING_SCART_SV_PAL_M,
    SOURCE_TYPE_TIMING_SCART_SV_PAL_N,
    SOURCE_TYPE_TIMING_SCART_SV_PAL_60,
    SOURCE_TYPE_TIMING_SCART_SV_SECAM,

    SOURCE_TYPE_TIMING_YPBPR_SD_I_50,
    SOURCE_TYPE_TIMING_YPBPR_SD_I_60,
    SOURCE_TYPE_TIMING_YPBPR_SD_I_50_OS,
    SOURCE_TYPE_TIMING_YPBPR_SD_I_60_OS,

    SOURCE_TYPE_TIMING_YPBPR_SD_P_50,
    SOURCE_TYPE_TIMING_YPBPR_SD_P_60,
    SOURCE_TYPE_TIMING_YPBPR_SD_P_50_OS,
    SOURCE_TYPE_TIMING_YPBPR_SD_P_60_OS,

    SOURCE_TYPE_TIMING_YPBPR_720P_24,
    SOURCE_TYPE_TIMING_YPBPR_720P_25,
    SOURCE_TYPE_TIMING_YPBPR_720P_50,
    SOURCE_TYPE_TIMING_YPBPR_720P_60,
    
    SOURCE_TYPE_TIMING_YPBPR_1080I_50,
    SOURCE_TYPE_TIMING_YPBPR_1080I_60,

    SOURCE_TYPE_TIMING_YPBPR_1080P_24,
    SOURCE_TYPE_TIMING_YPBPR_1080P_25,   
    SOURCE_TYPE_TIMING_YPBPR_1080P_50,
    SOURCE_TYPE_TIMING_YPBPR_1080P_60,

    SOURCE_TYPE_TIMING_DIGI_SD_I_50,
    SOURCE_TYPE_TIMING_DIGI_SD_I_60,
    SOURCE_TYPE_TIMING_3D_480I_60_FP,
    SOURCE_TYPE_TIMING_3D_576I_60_FP, 

    SOURCE_TYPE_TIMING_DIGI_SD_P_50,
    SOURCE_TYPE_TIMING_DIGI_SD_P_60,
    SOURCE_TYPE_TIMING_3D_576p_50_FP,
    SOURCE_TYPE_TIMING_3D_480p_60_FP,    

    SOURCE_TYPE_TIMING_DIGI_720P_24,
    SOURCE_TYPE_TIMING_DIGI_720P_25,    
    SOURCE_TYPE_TIMING_DIGI_720P_50,
    SOURCE_TYPE_TIMING_DIGI_720P_60,
    SOURCE_TYPE_TIMING_3D_720p_24_FP,
    SOURCE_TYPE_TIMING_3D_720p_30_FP,
    SOURCE_TYPE_TIMING_3D_720p_50_FP, 
    SOURCE_TYPE_TIMING_3D_720p_60_FP,

    SOURCE_TYPE_TIMING_DIGI_1080I_50,
    SOURCE_TYPE_TIMING_DIGI_1080I_60,
    SOURCE_TYPE_TIMING_3D_1080I_50_FP,
    SOURCE_TYPE_TIMING_3D_1080I_60_FP, 

    SOURCE_TYPE_TIMING_DIGI_1080P_24,
    SOURCE_TYPE_TIMING_DIGI_1080P_25,
    SOURCE_TYPE_TIMING_3D_1080p_24_FP,
    SOURCE_TYPE_TIMING_3D_1080p_30_FP,    
    SOURCE_TYPE_TIMING_3D_1080p_50_FP,    
    SOURCE_TYPE_TIMING_3D_1080p_60_FP,
    SOURCE_TYPE_TIMING_3D_1650_750_60_FP,
    SOURCE_TYPE_TIMING_3D_1650_1500_30_FP,

	SOURCE_TYPE_TIMING_3D_640_480p_60_FP,
    SOURCE_TYPE_TIMING_3D_1440_240p_60_FP,
    SOURCE_TYPE_TIMING_3D_1440_288p_50_FP,
    SOURCE_TYPE_TIMING_3D_1440_576p_50_FP,
    SOURCE_TYPE_TIMING_3D_720p_25_FP,
    SOURCE_TYPE_TIMING_3D_1080p_25_FP,
    SOURCE_TYPE_TIMING_3D_1080I_1250TOTAL_50_FP,
    
    SOURCE_TYPE_TIMING_3D_1080p_24_SBS_FULL,
	SOURCE_TYPE_TIMING_3D_1080p_30_SBS_FULL,
	SOURCE_TYPE_TIMING_3D_1080I_50_SBS_FULL,
	SOURCE_TYPE_TIMING_3D_1080I_60_SBS_FULL,
	SOURCE_TYPE_TIMING_3D_720p_24_SBS_FULL,
	SOURCE_TYPE_TIMING_3D_720p_30_SBS_FULL,
	SOURCE_TYPE_TIMING_3D_720p_50_SBS_FULL,
	SOURCE_TYPE_TIMING_3D_720p_60_SBS_FULL,
	SOURCE_TYPE_TIMING_3D_480p_60_SBS_FULL,
	SOURCE_TYPE_TIMING_3D_576p_50_SBS_FULL,
	SOURCE_TYPE_TIMING_3D_480I_60_SBS_FULL,
	SOURCE_TYPE_TIMING_3D_576I_50_SBS_FULL,
	SOURCE_TYPE_TIMING_3D_640_480p_60_SBS_FULL,

	SOURCE_TYPE_TIMING_3D_640_480p_60_LA,
    SOURCE_TYPE_TIMING_3D_480p_60_LA,
    SOURCE_TYPE_TIMING_3D_576p_50_LA,
    SOURCE_TYPE_TIMING_3D_720p_60_LA,
    SOURCE_TYPE_TIMING_3D_720p_50_LA,
    SOURCE_TYPE_TIMING_3D_1080p_24_LA,

	SOURCE_TYPE_TIMING_3D_480I_60_FA,
    SOURCE_TYPE_TIMING_3D_1080I_60_FA,
    SOURCE_TYPE_TIMING_3D_1080I_50_FA,

    SOURCE_TYPE_TIMING_DIGI_1080P_50,
    SOURCE_TYPE_TIMING_DIGI_1080P_60,

    SOURCE_TYPE_TIMING_DTV_SD_I_50,
    SOURCE_TYPE_TIMING_DTV_SD_I_60,
    
    SOURCE_TYPE_TIMING_DTV_SD_P_50,
    SOURCE_TYPE_TIMING_DTV_SD_P_60,
    
    SOURCE_TYPE_TIMING_DTV_720P_24,
    SOURCE_TYPE_TIMING_DTV_720P_25,    
    SOURCE_TYPE_TIMING_DTV_720P_50,
    SOURCE_TYPE_TIMING_DTV_720P_60,
    
    SOURCE_TYPE_TIMING_DTV_1080I_50,
    SOURCE_TYPE_TIMING_DTV_1080I_60,
    SOURCE_TYPE_TIMING_DTV_1080P_24,
    SOURCE_TYPE_TIMING_DTV_1080P_25,    
    SOURCE_TYPE_TIMING_DTV_1080P_50,
    SOURCE_TYPE_TIMING_DTV_1080P_60,

    SOURCE_TYPE_TIMING_MM_SD_I,
    SOURCE_TYPE_TIMING_MM_SD_P,
    SOURCE_TYPE_TIMING_MM_720P_SD,
    SOURCE_TYPE_TIMING_MM_720P_HD,
    SOURCE_TYPE_TIMING_MM_1080IP_SD, 
    SOURCE_TYPE_TIMING_MM_1080IP_HD, 

    SOURCE_TYPE_TIMING_PC_RGB,
    SOURCE_TYPE_TIMING_PC_YCBCR,
   
    SOURCE_TYPE_TIMING_MAX
};
/* bCustomSourceGroup[][QTY_IDX_RANGE_DIM]
 * Customer re-define the input source timing index groups.
 * The 1st column is the begin timing index.
 * The 2nd column is the end timing index.
 * The 2nd column should be larger than or equal to 1st column.
 * The last row should be fix to {SOURCE_TYPE_TIMING_MAX, SOURCE_TYPE_TIMING_MAX}
 */
UINT8 bCustomSourceGroup[][QTY_IDX_RANGE_DIM] =
{
    {SOURCE_TYPE_TIMING_RFTV_NTSC_358,      SOURCE_TYPE_TIMING_RFTV_PAL_60},        // [0]
    {SOURCE_TYPE_TIMING_CVBS_NTSC_358,      SOURCE_TYPE_TIMING_CVBS_NTSC_443},          // [1]
    {SOURCE_TYPE_TIMING_CVBS_PAL,               SOURCE_TYPE_TIMING_CVBS_PAL_60},       // [2]
    {SOURCE_TYPE_TIMING_SECAM_RFTV,         SOURCE_TYPE_TIMING_SECAM_RFTV},         // [3]
    {SOURCE_TYPE_TIMING_SECAM_CVBS,         SOURCE_TYPE_TIMING_SECAM_SV},           // [4]
    {SOURCE_TYPE_TIMING_SCART_RGB,          SOURCE_TYPE_TIMING_SCART_RGB},          // [5]
    {SOURCE_TYPE_TIMING_SCART_AV_NTSC_358,  SOURCE_TYPE_TIMING_SCART_SV_SECAM},     // [6]
    {SOURCE_TYPE_TIMING_YPBPR_SD_I_50,      SOURCE_TYPE_TIMING_YPBPR_SD_I_60_OS},   // [7]
    {SOURCE_TYPE_TIMING_YPBPR_SD_P_50,      SOURCE_TYPE_TIMING_YPBPR_SD_P_60_OS},   // [8]
    {SOURCE_TYPE_TIMING_YPBPR_720P_24,      SOURCE_TYPE_TIMING_YPBPR_720P_60},      // [9]
    {SOURCE_TYPE_TIMING_YPBPR_1080I_50,     SOURCE_TYPE_TIMING_YPBPR_1080P_60},     // [10]
    {SOURCE_TYPE_TIMING_DIGI_SD_I_50,       SOURCE_TYPE_TIMING_DIGI_SD_I_60},       // [11]
    {SOURCE_TYPE_TIMING_DIGI_SD_P_50,       SOURCE_TYPE_TIMING_DIGI_SD_P_60},       // [12]
    {SOURCE_TYPE_TIMING_DIGI_720P_24,       SOURCE_TYPE_TIMING_DIGI_720P_60},       // [13]
    {SOURCE_TYPE_TIMING_DIGI_1080I_50,      SOURCE_TYPE_TIMING_DIGI_1080P_60},      // [14]
    {SOURCE_TYPE_TIMING_DTV_SD_I_50,        SOURCE_TYPE_TIMING_DTV_SD_I_60},        // [15]
    {SOURCE_TYPE_TIMING_DTV_SD_P_50,        SOURCE_TYPE_TIMING_DTV_SD_P_60},        // [16]
    {SOURCE_TYPE_TIMING_DTV_720P_24,        SOURCE_TYPE_TIMING_DTV_720P_60},        // [17]
    {SOURCE_TYPE_TIMING_DTV_1080I_50,       SOURCE_TYPE_TIMING_DTV_1080P_60},       // [18]
    {SOURCE_TYPE_TIMING_MM_SD_I,       SOURCE_TYPE_TIMING_MM_SD_P},       // [19]
    {SOURCE_TYPE_TIMING_MM_720P_SD,       SOURCE_TYPE_TIMING_MM_720P_SD},       // [20]
    {SOURCE_TYPE_TIMING_MM_720P_HD,       SOURCE_TYPE_TIMING_MM_720P_HD},       // [21]
    {SOURCE_TYPE_TIMING_MM_1080IP_SD,       SOURCE_TYPE_TIMING_MM_1080IP_SD},       // [22]
    {SOURCE_TYPE_TIMING_MM_1080IP_HD,       SOURCE_TYPE_TIMING_MM_1080IP_HD},       // [23]
    {SOURCE_TYPE_TIMING_PC_RGB,             SOURCE_TYPE_TIMING_PC_YCBCR},           // [24]
    {SOURCE_TYPE_TIMING_MAX,                SOURCE_TYPE_TIMING_MAX}    // Don't change this row.
};

/* bCustomQtyTbl[][MDY_QTY_DIM]
 * This table store the fine tuned PQ date generated by NCSTool.
 * The dimension of bCustomQtyTbl[] should be exactly the same as (bCustomSourceGroup[]-1)
 */
UINT8 bCustomQtyTbl[FLASHPQ_NUM][25][CUSTOM_QTY_TBL_DIM] =
{
    {
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_RFTV_NTSC_358,      SOURCE_TYPE_TIMING_RFTV_PAL_60},        // [0]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_CVBS_NTSC_358,      SOURCE_TYPE_TIMING_SV_PAL_M_OS},        // [1]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_CVBS_PAL,           SOURCE_TYPE_TIMING_SV_PAL_60_OS},       // [2]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_SECAM_RFTV,         SOURCE_TYPE_TIMING_SECAM_RFTV},         // [3]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_SECAM_CVBS,         SOURCE_TYPE_TIMING_SECAM_SV},           // [4]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_SCART_RGB,          SOURCE_TYPE_TIMING_SCART_RGB},          // [5]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_SCART_AV_NTSC_358,  SOURCE_TYPE_TIMING_SCART_SV_SECAM},     // [6]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_YPBPR_SD_I_50,      SOURCE_TYPE_TIMING_YPBPR_SD_I_60_OS},   // [7]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_YPBPR_SD_P_50,      SOURCE_TYPE_TIMING_YPBPR_SD_P_60_OS},   // [8]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_YPBPR_720P_50,      SOURCE_TYPE_TIMING_YPBPR_720P_60},      // [9]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_YPBPR_1080I_50,     SOURCE_TYPE_TIMING_YPBPR_1080P_60},     // [10]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_DIGI_SD_I_50,       SOURCE_TYPE_TIMING_DIGI_SD_I_60},       // [11]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_DIGI_SD_P_50,       SOURCE_TYPE_TIMING_DIGI_SD_P_60},       // [12]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_DIGI_720P_50,       SOURCE_TYPE_TIMING_DIGI_720P_60},       // [13]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_DIGI_1080I_50,      SOURCE_TYPE_TIMING_DIGI_1080P_60},      // [14]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_DTV_SD_I_50,        SOURCE_TYPE_TIMING_DTV_SD_I_60},        // [15]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_DTV_SD_P_50,        SOURCE_TYPE_TIMING_DTV_SD_P_60},        // [16]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_DTV_720P_50,        SOURCE_TYPE_TIMING_DTV_720P_60},        // [17]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_DTV_1080I_50,       SOURCE_TYPE_TIMING_DTV_1080P_60},       // [18]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_MM_SD_I,            SOURCE_TYPE_TIMING_MM_SD_P},            // [19]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_MM_720P_SD,         SOURCE_TYPE_TIMING_MM_720P_SD},         // [20]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_MM_720P_HD,         SOURCE_TYPE_TIMING_MM_720P_HD},         // [21]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_MM_1080IP_SD,       SOURCE_TYPE_TIMING_MM_1080IP_SD},       // [22]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_MM_1080IP_HD,       SOURCE_TYPE_TIMING_MM_1080IP_HD},       // [23]
        #include "QTY_TBL_DEFAULT.h"        // {SOURCE_TYPE_TIMING_PC_RGB,             SOURCE_TYPE_TIMING_PC_YCBCR},           // [24]
    },
    #if (FLASHPQ_NUM>=2)
    {
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_RFTV_NTSC_358,      SOURCE_TYPE_TIMING_RFTV_PAL_60},        // [0]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_CVBS_NTSC_358,      SOURCE_TYPE_TIMING_SV_PAL_M_OS},        // [1]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_CVBS_PAL,           SOURCE_TYPE_TIMING_SV_PAL_60_OS},       // [2]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_SECAM_RFTV,         SOURCE_TYPE_TIMING_SECAM_RFTV},         // [3]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_SECAM_CVBS,         SOURCE_TYPE_TIMING_SECAM_SV},           // [4]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_SCART_RGB,          SOURCE_TYPE_TIMING_SCART_RGB},          // [5]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_SCART_AV_NTSC_358,  SOURCE_TYPE_TIMING_SCART_SV_SECAM},     // [6]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_YPBPR_SD_I_50,      SOURCE_TYPE_TIMING_YPBPR_SD_I_60_OS},   // [7]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_YPBPR_SD_P_50,      SOURCE_TYPE_TIMING_YPBPR_SD_P_60_OS},   // [8]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_YPBPR_720P_50,      SOURCE_TYPE_TIMING_YPBPR_720P_60},      // [9]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_YPBPR_1080I_50,     SOURCE_TYPE_TIMING_YPBPR_1080P_60},     // [10]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_DIGI_SD_I_50,       SOURCE_TYPE_TIMING_DIGI_SD_I_60},       // [11]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_DIGI_SD_P_50,       SOURCE_TYPE_TIMING_DIGI_SD_P_60},       // [12]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_DIGI_720P_50,       SOURCE_TYPE_TIMING_DIGI_720P_60},       // [13]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_DIGI_1080I_50,      SOURCE_TYPE_TIMING_DIGI_1080P_60},      // [14]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_DTV_SD_I_50,        SOURCE_TYPE_TIMING_DTV_SD_I_60},        // [15]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_DTV_SD_P_50,        SOURCE_TYPE_TIMING_DTV_SD_P_60},        // [16]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_DTV_720P_50,        SOURCE_TYPE_TIMING_DTV_720P_60},        // [17]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_DTV_1080I_50,       SOURCE_TYPE_TIMING_DTV_1080P_60},       // [18]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_MM_SD_I,            SOURCE_TYPE_TIMING_MM_SD_P},            // [19]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_MM_720P_SD,         SOURCE_TYPE_TIMING_MM_720P_SD},         // [20]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_MM_720P_HD,         SOURCE_TYPE_TIMING_MM_720P_HD},         // [21]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_MM_1080IP_SD,       SOURCE_TYPE_TIMING_MM_1080IP_SD},       // [22]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_MM_1080IP_HD,       SOURCE_TYPE_TIMING_MM_1080IP_HD},       // [23]
        #include "QTY_TBL_DEFAULT_2ND.h"        // {SOURCE_TYPE_TIMING_PC_RGB,             SOURCE_TYPE_TIMING_PC_YCBCR},           // [24]
    },
    #endif
    
};

#endif // #ifndef _QTY_TBL_H_

